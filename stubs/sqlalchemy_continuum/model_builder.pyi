from .utils import adapt_columns as adapt_columns, option as option
from .version import VersionClassBase as VersionClassBase
from _typeshed import Incomplete
from collections.abc import Generator

def find_closest_versioned_parent(manager, model): ...
def versioned_parents(manager, model) -> Generator[Incomplete, None, None]: ...
def get_base_class(manager, model): ...
def version_base(manager, parent_cls, base_class_factory: Incomplete | None = ...): ...
def copy_mapper_args(model): ...

class ModelBuilder:
    manager: Incomplete
    model: Incomplete
    def __init__(self, versioning_manager, model) -> None: ...
    def build_parent_relationship(self): ...
    def build_transaction_relationship(self, tx_class) -> None: ...
    def base_classes(self): ...
    def inheritance_args(self, cls, version_table, table): ...
    def get_inherited_denormalized_columns(self, table): ...
    def build_model(self, table): ...
    version_class: Incomplete
    def __call__(self, table, tx_class): ...
