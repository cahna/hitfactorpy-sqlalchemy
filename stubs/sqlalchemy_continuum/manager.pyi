from .builder import Builder as Builder
from .fetcher import SubqueryFetcher as SubqueryFetcher, ValidityFetcher as ValidityFetcher
from .operation import Operation as Operation
from .plugins import PluginCollection as PluginCollection
from .transaction import TransactionFactory as TransactionFactory
from .unit_of_work import UnitOfWork as UnitOfWork
from .utils import is_modified as is_modified, is_versioned as is_versioned
from _typeshed import Incomplete

def tracked_operation(func): ...

class VersioningManager:
    uow_class: Incomplete
    builder: Incomplete
    transaction_cls: Incomplete
    user_cls: Incomplete
    options: Incomplete
    def __init__(self, unit_of_work_cls=..., transaction_cls: Incomplete | None = ..., user_cls: Incomplete | None = ..., options=..., plugins: Incomplete | None = ..., builder: Incomplete | None = ...) -> None: ...
    @property
    def plugins(self): ...
    @plugins.setter
    def plugins(self, plugin_collection) -> None: ...
    def fetcher(self, obj): ...
    tables: Incomplete
    pending_classes: Incomplete
    association_tables: Incomplete
    association_version_tables: Incomplete
    declarative_base: Incomplete
    version_class_map: Incomplete
    parent_class_map: Incomplete
    session_listeners: Incomplete
    mapper_listeners: Incomplete
    class_config_listeners: Incomplete
    units_of_work: Incomplete
    session_connection_map: Incomplete
    metadata: Incomplete
    def reset(self) -> None: ...
    def create_transaction_model(self): ...
    def is_excluded_column(self, model, column): ...
    def is_excluded_property(self, model, key): ...
    def option(self, model, name): ...
    def apply_class_configuration_listeners(self, mapper) -> None: ...
    def remove_class_configuration_listeners(self, mapper) -> None: ...
    def track_operations(self, mapper) -> None: ...
    def remove_operations_tracking(self, mapper) -> None: ...
    def track_session(self, session) -> None: ...
    def remove_session_tracking(self, session) -> None: ...
    def track_inserts(self, uow, target) -> None: ...
    def track_updates(self, uow, target) -> None: ...
    def track_deletes(self, uow, target) -> None: ...
    def unit_of_work(self, session): ...
    def before_flush(self, session, flush_context, instances) -> None: ...
    def after_flush(self, session, flush_context) -> None: ...
    def clear(self, session) -> None: ...
    def clear_connection(self, conn) -> None: ...
    def append_association_operation(self, conn, table_name, params, op) -> None: ...
    def track_cloned_connections(self, c, opt) -> None: ...
    def track_association_operations(self, conn, cursor, statement, parameters, context, executemany) -> None: ...
    def positional_args_to_dict(self, op, statement, params): ...
