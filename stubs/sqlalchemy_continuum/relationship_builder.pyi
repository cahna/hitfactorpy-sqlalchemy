from .exc import ClassNotVersioned as ClassNotVersioned
from .expression_reflector import VersionExpressionReflector as VersionExpressionReflector
from .operation import Operation as Operation
from .table_builder import TableBuilder as TableBuilder
from .utils import adapt_columns as adapt_columns, option as option, version_class as version_class
from _typeshed import Incomplete

class RelationshipBuilder:
    manager: Incomplete
    property: Incomplete
    model: Incomplete
    def __init__(self, versioning_manager, model, property_) -> None: ...
    def one_to_many_subquery(self, obj): ...
    def many_to_one_subquery(self, obj): ...
    def query(self, obj): ...
    def process_query(self, query): ...
    def criteria(self, obj): ...
    def many_to_many_criteria(self, obj): ...
    def many_to_one_criteria(self, obj): ...
    def one_to_many_criteria(self, obj): ...
    @property
    def reflected_relationship(self): ...
    def association_subquery(self, obj): ...
    association_version_table: Incomplete
    def build_association_version_tables(self) -> None: ...
    local_cls: Incomplete
    versioned: bool
    remote_cls: Incomplete
    remote_to_association_column_pairs: Incomplete
    def __call__(self) -> None: ...
