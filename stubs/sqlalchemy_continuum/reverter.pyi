from .operation import Operation as Operation
from .utils import parent_class as parent_class, versioned_column_properties as versioned_column_properties
from _typeshed import Incomplete
from collections.abc import Generator

def first_level(paths) -> Generator[Incomplete, None, None]: ...
def subpaths(paths, name) -> Generator[Incomplete, None, None]: ...

class ReverterException(Exception): ...

class Reverter:
    visited_objects: Incomplete
    obj: Incomplete
    version_parent: Incomplete
    parent_class: Incomplete
    parent_mapper: Incomplete
    session: Incomplete
    relations: Incomplete
    def __init__(self, obj, visited_objects: Incomplete | None = ..., relations=...) -> None: ...
    def revert_properties(self) -> None: ...
    def revert_association(self, prop) -> None: ...
    def revert_relationship(self, prop) -> None: ...
    def revert_child(self, child, prop): ...
    def revert_relationships(self) -> None: ...
    def __call__(self): ...
