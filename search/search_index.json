{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"hitfactorpy_sqlalchemy \u00b6 Import and manage practical match reports in a database with SQLAlchemy Status \u00b6 Work in progress\u2026","title":"Introduction"},{"location":"#hitfactorpy_sqlalchemy","text":"Import and manage practical match reports in a database with SQLAlchemy","title":"hitfactorpy_sqlalchemy"},{"location":"#status","text":"Work in progress\u2026","title":"Status"},{"location":"cli/","text":"CLI Usage \u00b6 $ hitfactorpy-sqlalchemy --help $ python -m hitfactorpy-sqlalchemy --help --version \u00b6 Prints the package version and exits. $ hitfactorpy-sqlalchemy --version 0.0.4 Command Group: migrate \u00b6 The default database connection string for alembic migrations is postgresql+asyncpg://postgres:postgres@localhost:5432/hitfactorpy . For information on overriding connection settings, run: $ hitfactorpy-sqlalchemy migrate --help NOTE : An async driver is required for alembic to work. (Everything else should work regardless of chosen driver) Command: migrate check \u00b6 Verify DB, migrations, and models are in-sync. $ hitfactorpy-sqlalchemy migrate check Command: migrate upgrade \u00b6 Apply all pending migrations (default). $ hitfactorpy-sqlalchemy migrate upgrade <rev> Command Group: import \u00b6 Commands for importing match data into database. $ hitfactorpy-sqlalchemy import --help Command: import match-report \u00b6 Examples: Import a match report from a text file: $ hitfactorpy-sqlalchemy import match-report ./report.txt Bulk import match reports: $ find reports/ -type f -name \"*.txt\" | xargs hitfactorpy-sqlalchemy import match-report","title":"CLI"},{"location":"cli/#cli-usage","text":"$ hitfactorpy-sqlalchemy --help $ python -m hitfactorpy-sqlalchemy --help","title":"CLI Usage"},{"location":"cli/#-version","text":"Prints the package version and exits. $ hitfactorpy-sqlalchemy --version 0.0.4","title":"--version"},{"location":"cli/#command-group-migrate","text":"The default database connection string for alembic migrations is postgresql+asyncpg://postgres:postgres@localhost:5432/hitfactorpy . For information on overriding connection settings, run: $ hitfactorpy-sqlalchemy migrate --help NOTE : An async driver is required for alembic to work. (Everything else should work regardless of chosen driver)","title":"Command Group: migrate"},{"location":"cli/#command-migrate-check","text":"Verify DB, migrations, and models are in-sync. $ hitfactorpy-sqlalchemy migrate check","title":"Command: migrate check"},{"location":"cli/#command-migrate-upgrade","text":"Apply all pending migrations (default). $ hitfactorpy-sqlalchemy migrate upgrade <rev>","title":"Command: migrate upgrade"},{"location":"cli/#command-group-import","text":"Commands for importing match data into database. $ hitfactorpy-sqlalchemy import --help","title":"Command Group: import"},{"location":"cli/#command-import-match-report","text":"Examples: Import a match report from a text file: $ hitfactorpy-sqlalchemy import match-report ./report.txt Bulk import match reports: $ find reports/ -type f -name \"*.txt\" | xargs hitfactorpy-sqlalchemy import match-report","title":"Command: import match-report"},{"location":"linux-setup/","text":"Linux dev environment steps \u00b6 Prerequisites \u00b6 Install system dependencies \u00b6 poetry pyenv and its dependencies verify installation with pyenv doctor Setup pyenv for project \u00b6 pyenv virtualenv 3.10 hitfactorpy_sqlalchemy : create a virtualenv named \u201chitfactorpy_sqlalchemy\u201d using python v3.10 pyenv local hitfactorpy_sqlalchemy : configure pyenv to use \u201chitfactorpy_sqlalchemy\u201d for the current directory pyenv activate hitfactorpy_sqlalchemy : activate the virtualenv Configure poetry to recognize pyenv \u00b6 poetry config virtualenvs.prefer-active-python true Verify output of poetry env info ; the paths for Virtualenv and System should match the value of $PYENV_ROOT (default: $HOME/.pyenv ) Development \u00b6 Install dependencies: poetry install Install pre-commit hooks: pre-commit install Test: poetry run tox (or tox , or pytest tests ) Build: poetry build","title":"Linux+Pyenv"},{"location":"linux-setup/#linux-dev-environment-steps","text":"","title":"Linux dev environment steps"},{"location":"linux-setup/#prerequisites","text":"","title":"Prerequisites"},{"location":"linux-setup/#install-system-dependencies","text":"poetry pyenv and its dependencies verify installation with pyenv doctor","title":"Install system dependencies"},{"location":"linux-setup/#setup-pyenv-for-project","text":"pyenv virtualenv 3.10 hitfactorpy_sqlalchemy : create a virtualenv named \u201chitfactorpy_sqlalchemy\u201d using python v3.10 pyenv local hitfactorpy_sqlalchemy : configure pyenv to use \u201chitfactorpy_sqlalchemy\u201d for the current directory pyenv activate hitfactorpy_sqlalchemy : activate the virtualenv","title":"Setup pyenv for project"},{"location":"linux-setup/#configure-poetry-to-recognize-pyenv","text":"poetry config virtualenvs.prefer-active-python true Verify output of poetry env info ; the paths for Virtualenv and System should match the value of $PYENV_ROOT (default: $HOME/.pyenv )","title":"Configure poetry to recognize pyenv"},{"location":"linux-setup/#development","text":"Install dependencies: poetry install Install pre-commit hooks: pre-commit install Test: poetry run tox (or tox , or pytest tests ) Build: poetry build","title":"Development"}]}